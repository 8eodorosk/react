{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT } from '../actions/types';\nvar initialState = {\n  contacts: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state);\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(function (contact) {\n          return contact.id !== action.payload;\n        })\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [action.payload].concat(_toConsumableArray(state.contacts))\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\PI9278\\Desktop\\p&i\\react\\contactmanager_redux\\src\\reducers\\contactReducer.js"],"names":["GET_CONTACTS","DELETE_CONTACT","ADD_CONTACT","initialState","contacts","state","action","type","filter","contact","id","payload"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,WAAvC,QAA0D,kBAA1D;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,YAAL;AACI,+BACOK,KADP;;AAGJ,SAAKJ,cAAL;AACI,+BACOI,KADP;AAEID,QAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeI,MAAf,CAAsB,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACK,OAA1B;AAAA,SAA7B;AAFd;;AAIJ,SAAKT,WAAL;AACI,+BACOG,KADP;AAEID,QAAAA,QAAQ,GAAGE,MAAM,CAACK,OAAV,4BAAsBN,KAAK,CAACD,QAA5B;AAFZ;;AAIJ;AACI,aAAOC,KAAP;AAhBR;AAkBH","sourcesContent":["import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    contacts: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}