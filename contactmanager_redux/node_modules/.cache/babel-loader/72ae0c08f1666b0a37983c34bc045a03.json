{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\PI9278\\\\Desktop\\\\p&i\\\\react\\\\contactmanager_redux\\\\src\\\\components\\\\contacts\\\\EditContact.js\";\nimport React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getContact } from '../../actions/contactActions';\n\nvar EditContact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditContact, _Component);\n\n  function EditContact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditContact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditContact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n      prevProps: {}\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone; // Check For Errors\n\n      if (name === '') {\n        _this.setState({\n          errors: {\n            name: 'Name is required'\n          }\n        });\n\n        return;\n      }\n\n      if (email === '') {\n        _this.setState({\n          errors: {\n            email: 'Email is required'\n          }\n        });\n\n        return;\n      }\n\n      if (phone === '') {\n        _this.setState({\n          errors: {\n            phone: 'Phone is required'\n          }\n        });\n\n        return;\n      }\n\n      var updContact = {\n        name: name,\n        email: email,\n        phone: phone\n      };\n      var id = _this.props.match.params.id; //// UPDATE CONTACT ////\n      // Clear State\n\n      _this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n      });\n\n      _this.props.history.push('/');\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(EditContact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.getContact(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          errors = _this$state2.errors;\n      return React.createElement(\"div\", {\n        className: \"card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Edit Contact\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(TextInputGroup, {\n        label: \"Name\",\n        name: \"name\",\n        placeholder: \"Enter Name\",\n        value: name,\n        onChange: this.onChange,\n        error: errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        value: email,\n        onChange: this.onChange,\n        error: errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        label: \"Phone\",\n        name: \"phone\",\n        placeholder: \"Enter Phone\",\n        value: phone,\n        onChange: this.onChange,\n        error: errors.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update Contact\",\n        className: \"btn btn-light btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var _props$contact = props.contact,\n          name = _props$contact.name,\n          email = _props$contact.email,\n          phone = _props$contact.phone; // giati kaleitai 2 fores??\n      // console.log(name);\n\n      return {\n        name: name,\n        email: email,\n        phone: phone\n      };\n    }\n  }]);\n\n  return EditContact;\n}(Component);\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contact: state.contact.contact\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getContact: getContact\n})(EditContact);","map":{"version":3,"sources":["C:\\Users\\PI9278\\Desktop\\p&i\\react\\contactmanager_redux\\src\\components\\contacts\\EditContact.js"],"names":["React","Component","TextInputGroup","PropTypes","connect","getContact","EditContact","state","name","email","phone","errors","prevProps","onSubmit","e","preventDefault","setState","updContact","id","props","match","params","history","push","onChange","target","value","contact","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getContact } from '../../actions/contactActions';\n\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n    prevProps: {}\n  };\n\n  static getDerivedStateFromProps(props, state) {\n\n\n    const { name, email, phone } = props.contact;\n\n\n\n    // giati kaleitai 2 fores??\n    // console.log(name);\n\n\n    return {\n      name,\n      email,\n      phone\n    }\n  }\n\n\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    this.props.getContact(id);\n\n\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    //// UPDATE CONTACT ////\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  contact: state.contact.contact\n})\n\nexport default connect(mapStateToProps, { getContact })(EditContact);\n"]},"metadata":{},"sourceType":"module"}